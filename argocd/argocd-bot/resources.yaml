apiVersion: v1
kind: Service
metadata:
  name: argocd-bot
  labels:
    app.kubernetes.io/name: argocd-bot
spec:
  selector:
    app.kubernetes.io/name: argocd-bot
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-bot
  labels:
    app.kubernetes.io/name: argocd-bot
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-bot
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-bot
    spec:
      containers:
      - name: argocd-bot
        image: marcb1/argocd-bot
        imagePullPolicy: Always
        command:
        - npm
        - start
        env:
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: "0"
        - name: LOG_LEVEL
          value: info
        - name: PORT
          value: "8080"
        - name: APP_ID
          value: "67056"
        - name: GITHUB_REPO
          value: github.com/hashbang/gitops
        - name: GITHUB_TOKEN
          value: ""
        - name: WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              key: webhook-secret
              name: argocd-bot-secret
        - name: PRIVATE_KEY_PATH
          value: /data/key.pem
        - name: ARGOCD_SERVER
          value: argocd-server.argocd.svc
        - name: ARGOCD_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              key: argocd-auth-token
              name: argocd-bot-secret
        ports:
        - containerPort: 8080
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 1
          tcpSocket:
            port: 8080
        volumeMounts:
        - mountPath: /data
          name: app-private-key
          readOnly: true
      volumes:
      - name: app-private-key
        secret:
          secretName: argocd-bot-secret
